@inproceedings{cloud1,
  doi       = {10.1109/sec.2018.00057},
  url       = {https://doi.org/10.1109/sec.2018.00057},
  year      = {2018},
  month     = oct,
  publisher = {{IEEE}},
  author    = {Zhenyu Ning and Jinghui Liao and Fengwei Zhang and Weisong Shi},
  title     = {Preliminary Study of Trusted Execution Environments on Heterogeneous Edge Platforms},
  booktitle = {2018 {IEEE}/{ACM} Symposium on Edge Computing ({SEC})}
}

@book{cloud2,
  doi       = {10.1109/sp.2015.10},
  url       = {https://doi.org/10.1109/sp.2015.10},
  year      = {2015},
  month     = may,
  publisher = {{IEEE}},
  author    = {Felix Schuster and Manuel Costa and Cedric Fournet and Christos Gkantsidis and Marcus Peinado and Gloria Mainar-Ruiz and Mark Russinovich},
  title     = {{VC}3: Trustworthy Data Analytics in the Cloud Using {SGX}},
  booktitle = {2015 {IEEE} Symposium on Security and Privacy}
}

@article{cloud3,
  doi       = {10.1145/2799647},
  url       = {https://doi.org/10.1145/2799647},
  year      = {2015},
  month     = sep,
  publisher = {Association for Computing Machinery ({ACM})},
  volume    = {33},
  number    = {3},
  pages     = {1--26},
  author    = {Andrew Baumann and Marcus Peinado and Galen Hunt},
  title     = {Shielding Applications from an Untrusted Cloud with Haven},
  journal   = {{ACM} Transactions on Computer Systems}
}

@inproceedings{cloud4,
  author    = {Brenner, Stefan and Wulf, Colin and Kapitza, R\"{u}diger},
  title     = {Running ZooKeeper Coordination Services in Untrusted Clouds},
  year      = {2014},
  publisher = {USENIX Association},
  address   = {USA},
  abstract  = {Cloud computing is a recent trend in computer science. However, privacy concerns and a lack of trust in cloud providers are an obstacle for many deployments. Maturing hardware support for implementing Trusted Execution Environments (TEEs) aims at mitigating these problems. Such technologies allow to run applications in a trusted environment, thereby protecting data from unauthorized access. To reduce the risk of security vulnerabilities, code executed inside a TEE should have a minimal Trusted Codebase. As a consequence, there is a trend for partitioning application's logic in trusted and untrusted parts. Only the trusted parts are executed inside the TEE handling the privacy-sensitive processing steps.In this paper, we add a transparent encryption layer to ZooKeeper by means of a privacy proxy supposed to run inside a TEE. We show what measures are necessary to split an application into a trusted and an untrusted part in order to protect the data stored inside, with Zoo-Keeper as an example. With our solution, ZooKeeper can be deployed at untrusted cloud providers, establishing confidential coordination for distributed applications. With our privacy proxy, all ZooKeeper functionality is retained while there is little degradation of throughput.},
  booktitle = {Proceedings of the 10th USENIX Conference on Hot Topics in System Dependability},
  pages     = {2},
  numpages  = {1},
  location  = {Broomfield, CO},
  series    = {HotDep'14}
}

@inproceedings{cloud5,
  author    = {Li Li and Dijiang Huang and Zhidong Shen and Bouzefrane, Samia},
  booktitle = {2013 IEEE Wireless Communications and Networking Conference (WCNC)},
  title     = {A cloud based dual-root trust model for secure mobile online transactions},
  year      = {2013},
  volume    = {},
  number    = {},
  pages     = {4404-4409},
  doi       = {10.1109/WCNC.2013.6555287}
}

@incollection{cloud6,
  doi       = {10.1007/978-3-642-31680-7_11},
  url       = {https://doi.org/10.1007/978-3-642-31680-7_11},
  year      = {2012},
  publisher = {Springer Berlin Heidelberg},
  pages     = {201--220},
  author    = {Martin Pirker and Daniel Slamanig and Johannes Winter},
  title     = {Practical Privacy Preserving Cloud Resource-Payment for Constrained Clients},
  booktitle = {Privacy Enhancing Technologies}
}

@inproceedings{cloud7,
  doi       = {10.1109/cloudcom.2012.6427606},
  url       = {https://doi.org/10.1109/cloudcom.2012.6427606},
  year      = {2012},
  month     = dec,
  publisher = {{IEEE}},
  author    = {Jaebok Shin and Yungu Kim and Wooram Park and Chanik Park},
  title     = {{DFCloud}: A {TPM}-based secure data access control method of cloud storage in mobile devices},
  booktitle = {4th {IEEE} International Conference on Cloud Computing Technology and Science Proceedings}
}

@inproceedings{cloud8,
  author    = {Brito, Tiago and Duarte, Nuno O. and Santos, Nuno},
  booktitle = {2016 IEEE 35th Symposium on Reliable Distributed Systems Workshops (SRDSW)},
  title     = {ARM TrustZone for Secure Image Processing on the Cloud},
  year      = {2016},
  volume    = {},
  number    = {},
  pages     = {37-42},
  doi       = {10.1109/SRDSW.2016.17}
}

@inproceedings{cloud9,
  author    = {Brenner, Stefan and Goltzsche, David and Kapitza, R\"{u}diger},
  title     = {TrApps: Secure Compartments in the Evil Cloud},
  year      = {2017},
  isbn      = {9781450349376},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3071064.3071069},
  doi       = {10.1145/3071064.3071069},
  abstract  = {The cloud computing paradigm enables the flexible and scalable outsourcing of workloads. However, cloud customers are often reluctant to entrust their sensitive data with cloud providers. This is due to the fact that the infrastructure is owned by another company and a resulting loss of control. With the recent advent of powerful ARM hardware targeted for data centres, there is the opportunity of using trusted execution technology provided by ARM TrustZone to enhance the protection of cloud customer's data.In this paper we propose TrApps, a secure platform for general-purpose trusted execution in an untrusted cloud with multiple isolated tenants based on the ARM TrustZone technology. Our system targets the parallel execution of partitioned applications of distinct tenants with lean security-sensitive components, and is based on a minimal trusted code base in the secure world of ARM TrustZone when compared to similar systems. In our evaluation we show the feasibility of our approach, and demonstrate its performance with trusted execution of memcached with an overhead of only 36.9% compared to the vanilla implementation and execution.},
  booktitle = {Proceedings of the 1st International Workshop on Security and Dependability of Multi-Domain Infrastructures},
  articleno = {5},
  numpages  = {6},
  keywords  = {Trusted Execution, Cloud Computing, ARM TrustZone},
  location  = {Belgrade, Serbia},
  series    = {XDOMO'17}
}

@inproceedings{os1,
  author    = {Azab, Ahmed M. and Ning, Peng and Shah, Jitesh and Chen, Quan and Bhutkar, Rohan and Ganesh, Guruprasad and Ma, Jia and Shen, Wenbo},
  title     = {Hypervision Across Worlds: Real-Time Kernel Protection from the ARM TrustZone Secure World},
  year      = {2014},
  isbn      = {9781450329576},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2660267.2660350},
  doi       = {10.1145/2660267.2660350},
  abstract  = {TrustZone-based Real-time Kernel Protection (TZ-RKP) is a novel system that provides real-time protection of the OS kernel using the ARM TrustZone secure world. TZ-RKP is more secure than current approaches that use hypervisors to host kernel protection tools. Although hypervisors provide privilege and isolation, they face fundamental security challenges due to their growing complexity and code size. TZ-RKP puts its security monitor, which represents its entire Trusted Computing Base (TCB), in the TrustZone secure world; a safe isolated environment that is dedicated to security services. Hence, the security monitor is safe from attacks that can potentially compromise the kernel, which runs in the normal world. Using the secure world for kernel protection has been crippled by the lack of control over targets that run in the normal world. TZ-RKP solves this prominent challenge using novel techniques that deprive the normal world from the ability to control certain privileged system functions. These functions are forced to route through the secure world for inspection and approval before being executed. TZ-RKP's control of the normal world is non-bypassable. It can effectively stop attacks that aim at modifying or injecting kernel binaries. It can also stop attacks that involve modifying the system memory layout, e.g, through memory double mapping. This paper presents the implementation and evaluation of TZ-RKP, which has gone through rigorous and thorough evaluation of effectiveness and performance. It is currently deployed on the latest models of the Samsung Galaxy series smart phones and tablets, which clearly demonstrates that it is a practical real-world system.},
  booktitle = {Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security},
  pages     = {90â€“102},
  numpages  = {13},
  keywords  = {arm trustzone, kernel protection, integrity monitoring},
  location  = {Scottsdale, Arizona, USA},
  series    = {CCS '14}
}

@misc{os2,
  title         = {Sprobes: Enforcing Kernel Code Integrity on the TrustZone Architecture},
  author        = {Xinyang Ge and Hayawardh Vijayakumar and Trent Jaeger},
  year          = {2014},
  eprint        = {1410.7747},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CR}
}

@inproceedings{os3,
  doi       = {10.1145/1533057.1533074},
  url       = {https://doi.org/10.1145/1533057.1533074},
  year      = {2009},
  publisher = {{ACM} Press},
  author    = {Kari Kostiainen and Jan-Erik Ekberg and N. Asokan and Aarne Rantala},
  title     = {On-board credentials with open provisioning},
  booktitle = {Proceedings of the 4th International Symposium on Information,  Computer,  and Communications Security - {ASIACCS} {\textquotesingle}09}
}

@inproceedings{os4,
  doi       = {10.1109/indin.2015.7281715},
  url       = {https://doi.org/10.1109/indin.2015.7281715},
  year      = {2015},
  month     = jul,
  publisher = {{IEEE}},
  author    = {Andreas Fitzek and Florian Achleitner and Johannes Winter and Daniel Hein},
  title     = {The {ANDIX} research {OS} {\&}{\#}x2014$\mathsemicolon$ {ARM} {TrustZone} meets industrial control systems security},
  booktitle = {2015 {IEEE} 13th International Conference on Industrial Informatics ({INDIN})}
}

